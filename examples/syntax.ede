// primitives
// int, float, boolean, string, array, hash, nil

// assignments
let a = 100
let b = "foo"
a += 20


// methods
let size = b.length()
println("true: ", size == 3)

// operators
let c = 10 + 10 * 10 - 20
let bar = b + "baz"
let d = (10 + (2 * 3))
let bool = true || false
let obj = {"d":d, "a":a, "bar":bar, "bool":bool}
let bool = !false

// imports
import json

// import method
let str = json.string(obj)

// error handling
let parsed = match (json.parse(obj + "fail")) {
    case error: println("allowed to fail")
}

// arrays
let arr = [1,2,3]
arr = [1..10]
println("array length: ", arr.length())

// hashes
let car = {"model":"fusion","name":"ford"}
car["price"] = 10000
println({"car":car})

// conditionals
if (arr.length() < 10) {
    println("yay")
} else {
    println("nay")
}

// for loop
for el = range arr {
    printf("index","=", index)
    println(", val", "=", el)
}

// reserved keywords
// let, nil, index, error, false, true

// functions
let add = func() {
    let sum = 0
    for el = range arr {
        sum += el
    }
    return sum
}

// function call
let total = add()
println("total", "=", total)

let arrk = [-10..-5].reverse()
arrk[1] = 10
println(arrk)

// inbuilt primitive methods
let lang = "ede"
let lang_rev = ""
for i = range lang.reverse() {
    lang_rev += i
}
println(lang == lang_rev)